// This file was generated by basehub. Do not edit directly. Read more: https://basehub.com/docs/api-reference/basehub-sdk

/* eslint-disable */
/* eslint-disable eslint-comments/no-restricted-disable */
/* tslint:disable */

"use client";
import "./chunk-YSQDPG26.js";

// ../../node_modules/basehub/src/next/toolbar/client-conditional-renderer.tsx
import * as React from "react";
import { createPortal } from "react-dom";
var LazyClientToolbar = React.lazy(
  () => import("./client-toolbar-AAOV3XYR.js").then((mod) => ({ default: mod.ClientToolbar }))
);
var ClientConditionalRenderer = ({
  draft,
  isForcedDraft,
  enableDraftMode,
  disableDraftMode,
  revalidateTags,
  resolvedRef,
  getLatestBranches,
  humanRevalidatePendingTags
}) => {
  const [hasRendered, setHasRendered] = React.useState(false);
  React.useEffect(() => {
    setHasRendered(true);
  }, []);
  const seekAndStoreBshbPreviewToken = React.useCallback(
    (type) => {
      if (typeof window === "undefined")
        return;
      const urlParams = new URLSearchParams(window.location.search);
      const bshbPreviewToken2 = urlParams.get("bshb-preview");
      if (bshbPreviewToken2) {
        window.localStorage.setItem("bshb-preview", bshbPreviewToken2);
        return bshbPreviewToken2;
      }
      if (type === "url-only")
        return;
      const fromStorage = window.localStorage.getItem("bshb-preview");
      if (fromStorage)
        return fromStorage;
    },
    []
  );
  const [bshbPreviewToken, setBshbPreviewToken] = React.useState(seekAndStoreBshbPreviewToken);
  const [shouldAutoEnableDraft, setShouldAutoEnableDraft] = React.useState();
  React.useLayoutEffect(() => {
    if (draft || isForcedDraft) {
      setShouldAutoEnableDraft(false);
      return;
    }
    const previewToken = seekAndStoreBshbPreviewToken("url-only");
    if (!previewToken) {
      setShouldAutoEnableDraft(false);
      return;
    }
    setBshbPreviewToken(previewToken);
    setShouldAutoEnableDraft(true);
  }, [draft, isForcedDraft, seekAndStoreBshbPreviewToken]);
  React.useEffect(() => {
    const url = new URL(window.location.href);
    const tags = url.searchParams.get("bshb-odr-tags");
    if (tags) {
      url.searchParams.delete("bshb-odr-tags");
      window.history.replaceState(null, "", url);
      revalidateTags({ tags: tags.split(",") }).then(({ success }) => {
        document.documentElement.dataset.basehubOdrStatus = success ? "success" : "error";
      }).catch(() => {
        document.documentElement.dataset.basehubOdrStatus = "error";
      });
    }
  }, [revalidateTags]);
  if (!bshbPreviewToken || !hasRendered || typeof document === "undefined") {
    return null;
  }
  const Portal = createPortal(
    /* @__PURE__ */ React.createElement(
      LazyClientToolbar,
      {
        disableDraftMode,
        enableDraftMode,
        draft,
        isForcedDraft,
        bshbPreviewToken,
        shouldAutoEnableDraft,
        seekAndStoreBshbPreviewToken,
        resolvedRef,
        getLatestBranches,
        humanRevalidatePendingTags
      }
    ),
    document.body
  );
  return Portal;
};
export {
  ClientConditionalRenderer
};
